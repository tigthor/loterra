{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ConfigResponse",
  "type": "object",
  "required": [
    "blockClaim",
    "blockIcoTimeframe",
    "blockTimePlay",
    "claimReward",
    "claimTicket",
    "combinationLen",
    "delegatorMinAmountInDelegation",
    "denomDelegation",
    "denomDelegationDecimal",
    "denomShare",
    "denomTicket",
    "drandGenesisTime",
    "drandPeriod",
    "drandPublicKey",
    "everyBlockHeight",
    "everyBlockTimePlay",
    "feeForDrandWorkerInPercentage",
    "holdersMaxPercentageReward",
    "holdersRewards",
    "jackpotPercentageReward",
    "jackpotReward",
    "owner",
    "pollCount",
    "pollEndHeight",
    "prizeRankWinnerPercentage",
    "tokenHolderPercentageFeeReward",
    "tokenHolderSupply",
    "validatorMinAmountToAllowClaim",
    "workerDrandMaxPercentageReward"
  ],
  "properties": {
    "blockClaim": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "blockIcoTimeframe": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "blockTimePlay": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "claimReward": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CanonicalAddr"
      }
    },
    "claimTicket": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CanonicalAddr"
      }
    },
    "combinationLen": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "delegatorMinAmountInDelegation": {
      "$ref": "#/definitions/Uint128"
    },
    "denomDelegation": {
      "type": "string"
    },
    "denomDelegationDecimal": {
      "$ref": "#/definitions/Uint128"
    },
    "denomShare": {
      "type": "string"
    },
    "denomTicket": {
      "type": "string"
    },
    "drandGenesisTime": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "drandPeriod": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "drandPublicKey": {
      "$ref": "#/definitions/Binary"
    },
    "everyBlockHeight": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "everyBlockTimePlay": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "feeForDrandWorkerInPercentage": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "holdersMaxPercentageReward": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "holdersRewards": {
      "$ref": "#/definitions/Uint128"
    },
    "jackpotPercentageReward": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "jackpotReward": {
      "$ref": "#/definitions/Uint128"
    },
    "owner": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "pollCount": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "pollEndHeight": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "prizeRankWinnerPercentage": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      }
    },
    "tokenHolderPercentageFeeReward": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "tokenHolderSupply": {
      "$ref": "#/definitions/Uint128"
    },
    "validatorMinAmountToAllowClaim": {
      "$ref": "#/definitions/Uint128"
    },
    "workerDrandMaxPercentageReward": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CanonicalAddr": {
      "$ref": "#/definitions/Binary"
    },
    "Uint128": {
      "type": "string"
    }
  }
}
