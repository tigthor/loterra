{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ConfigResponse",
  "type": "object",
  "required": [
    "admin",
    "block_time_play",
    "combination_len",
    "dao_funds",
    "denom_stable",
    "every_block_time_play",
    "fee_for_drand_worker_in_percentage",
    "jackpot_percentage_reward",
    "jackpot_reward",
    "latest_winning_number",
    "loterra_cw20_contract_address",
    "loterra_staking_contract_address",
    "lottery_counter",
    "poll_count",
    "poll_default_end_height",
    "price_per_ticket_to_register",
    "prize_rank_winner_percentage",
    "safe_lock",
    "terrand_contract_address",
    "token_holder_percentage_fee_reward"
  ],
  "properties": {
    "admin": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "block_time_play": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "combination_len": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "dao_funds": {
      "$ref": "#/definitions/Uint128"
    },
    "denom_stable": {
      "type": "string"
    },
    "every_block_time_play": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "fee_for_drand_worker_in_percentage": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "jackpot_percentage_reward": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "jackpot_reward": {
      "$ref": "#/definitions/Uint128"
    },
    "latest_winning_number": {
      "type": "string"
    },
    "loterra_cw20_contract_address": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "loterra_staking_contract_address": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "lottery_counter": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "poll_count": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "poll_default_end_height": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "price_per_ticket_to_register": {
      "$ref": "#/definitions/Uint128"
    },
    "prize_rank_winner_percentage": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      }
    },
    "safe_lock": {
      "type": "boolean"
    },
    "terrand_contract_address": {
      "$ref": "#/definitions/CanonicalAddr"
    },
    "token_holder_percentage_fee_reward": {
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CanonicalAddr": {
      "$ref": "#/definitions/Binary"
    },
    "Uint128": {
      "type": "string"
    }
  }
}
