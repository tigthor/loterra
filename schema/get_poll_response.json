{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GetPollResponse",
  "type": "object",
  "required": [
    "amount",
    "creator",
    "description",
    "end_height",
    "no_voters",
    "prize_per_rank",
    "proposal",
    "start_height",
    "status",
    "yes_voters"
  ],
  "properties": {
    "amount": {
      "$ref": "#/definitions/Uint128"
    },
    "creator": {
      "$ref": "#/definitions/HumanAddr"
    },
    "description": {
      "type": "string"
    },
    "end_height": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "migration_address": {
      "anyOf": [
        {
          "$ref": "#/definitions/HumanAddr"
        },
        {
          "type": "null"
        }
      ]
    },
    "no_voters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CanonicalAddr"
      }
    },
    "prize_per_rank": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      }
    },
    "proposal": {
      "$ref": "#/definitions/Proposal"
    },
    "start_height": {
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "status": {
      "$ref": "#/definitions/PollStatus"
    },
    "yes_voters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CanonicalAddr"
      }
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CanonicalAddr": {
      "$ref": "#/definitions/Binary"
    },
    "HumanAddr": {
      "type": "string"
    },
    "PollStatus": {
      "type": "string",
      "enum": [
        "InProgress",
        "Passed",
        "Rejected",
        "RejectedByCreator"
      ]
    },
    "Proposal": {
      "type": "string",
      "enum": [
        "LotteryEveryBlockTime",
        "HolderFeePercentage",
        "DrandWorkerFeePercentage",
        "PrizePerRank",
        "JackpotRewardPercentage",
        "AmountToRegister",
        "SecurityMigration",
        "DaoFunding",
        "StakingContractMigration",
        "NotExist"
      ]
    },
    "Uint128": {
      "type": "string"
    }
  }
}
